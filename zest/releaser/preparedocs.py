import os
from zest.releaser import prerelease
from zest.releaser import release
from zest.releaser import postrelease


def prepare_entrypoint_documentation(data):
    """Place the generated entrypoint doc in the source structure."""
    if data['name'] != 'zest.releaser':
        # We're available everywhere, but we're only intended for
        # zest.releaser internal usage.
        return
    target = os.path.join(data['workingdir'], u'doc', u'source',
                          u'entrypoints.rst')
    marker = u'.. ### AUTOGENERATED FROM HERE ###'
    result = []
    for line in open(target).readlines():
        line = line.rstrip()
        if line == marker:
            break
        result.append(line)
    result.append(marker)
    result.append('')

    for name, datadict in (
            ('prerelease', prerelease.DATA),
            ('release', release.DATA),
            ('postrelease', postrelease.DATA)):
        heading = u'{0} data dict items'.format(name.capitalize())
        result.append(heading)
        result.append(u'-' * len(heading))
        result.append(u'')
        for key in sorted(datadict.keys()):
            result.append(key)
            result.append(u'    ' + datadict[key])
            result.append(u'')

    open(target, 'wb').write(u'\n'.join(result).encode('utf-8'))
    print(u"Wrote entry point documentation to {0}".format(target))
