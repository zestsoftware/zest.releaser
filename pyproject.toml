[build-system]
# See https://snarky.ca/what-the-heck-is-pyproject-toml/
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "zest.releaser"
version = "9.6.0"
description = "Software releasing made easy and repeatable"
license = {text = "GPL"}
authors = [
    {name = "Reinout van Rees", email = "reinout@vanrees.org"},
    {name = "Maurits van Rees", email = "maurits@vanrees.org"},
]
dependencies = [
    "build >= 1.2.0",  # 1.2.0 added the 'installer' argument to DefaultIsolatedEnv
    "colorama",
    "importlib-metadata; python_version<'3.10'",
    "packaging",
    "readme_renderer[md] >= 40",
    "requests",
    "setuptools >= 61.0.0",  # older versions can't read pyproject.toml configurations
    "tomli; python_version<'3.11'",
    "twine >= 1.6.0",
    "wheel",
]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 6 - Mature",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License (GPL)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["releasing", "packaging", "pypi"]
# I thought there was a way to combine two files, but I don't see it.
# So define the readme as dynamic: still defined in setup.py.
dynamic = ["readme"]

[project.optional-dependencies]
recommended = [
    "check-manifest",
    "pep440",
    "pyroma",
]
test = [
    "zope.testing",
    "zope.testrunner",
]

[project.urls]
documentation = "https://zestreleaser.readthedocs.io"
repository = "https://github.com/zestsoftware/zest.releaser/"
changelog = "https://github.com/zestsoftware/zest.releaser/blob/master/CHANGES.rst"

[project.scripts]
release = "zest.releaser.release:main"
prerelease = "zest.releaser.prerelease:main"
postrelease = "zest.releaser.postrelease:main"
fullrelease = "zest.releaser.fullrelease:main"
longtest = "zest.releaser.longtest:main"
lasttagdiff = "zest.releaser.lasttagdiff:main"
lasttaglog = "zest.releaser.lasttaglog:main"
addchangelogentry = "zest.releaser.addchangelogentry:main"
bumpversion = "zest.releaser.bumpversion:main"

# The datachecks are implemented as entry points to be able to check
# our entry point implementation.
[project.entry-points."zest.releaser.prereleaser.middle"]
datacheck = "zest.releaser.prerelease:datacheck"

[project.entry-points."zest.releaser.releaser.middle"]
datacheck = "zest.releaser.release:datacheck"

[project.entry-points."zest.releaser.postreleaser.middle"]
datacheck = "zest.releaser.postrelease:datacheck"

[project.entry-points."zest.releaser.addchangelogentry.middle"]
datacheck = "zest.releaser.addchangelogentry:datacheck"

[project.entry-points."zest.releaser.bumpversion.middle"]
datacheck = "zest.releaser.bumpversion:datacheck"

# Documentation generation
[project.entry-points."zest.releaser.prereleaser.before"]
preparedocs = "zest.releaser.preparedocs:prepare_entrypoint_documentation"

[tool.isort]
profile = "plone"

[tool.zest-releaser]
extra-message = "[ci skip]"
tag-signing = true
